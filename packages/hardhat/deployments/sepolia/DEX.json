{
  "address": "0x70DDC1C50d2A062AEC214C3e1EDAd57E6b3628Ed",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountEth",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "EthToTokenSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountEth",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenDeposit",
          "type": "uint256"
        }
      ],
      "name": "LiquidityProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountEth",
          "type": "uint256"
        }
      ],
      "name": "TokenToEthSwap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "getLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "xInput",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "xReserves",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yReserves",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "yOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenInput",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethOutput",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3a9a1dc15c8b23e67e9f33acb4c3efc42c8439ffcb0e7ab7fbc7a8177016356a",
  "receipt": {
    "to": null,
    "from": "0x7b6b1677e41Fc1D1C995A7845dfd0deDF70AC3Ff",
    "contractAddress": "0x70DDC1C50d2A062AEC214C3e1EDAd57E6b3628Ed",
    "transactionIndex": 47,
    "gasUsed": "868377",
    "logsBloom": "0x
    "blockHash": "0x6ba8b7bd8c298b7b9b7e60198930c92773dea1c11d5a5932ab94ddf4d068ce23",
    "transactionHash": "0x3a9a1dc15c8b23e67e9f33acb4c3efc42c8439ffcb0e7ab7fbc7a8177016356a",
    "logs": [],
    "blockNumber": 6369523,
    "cumulativeGasUsed": "5469871",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb4ad7A7d1368F89889B26C6062886B0ba12d4a7A"
  ],
  "numDeployments": 1,
  "solcInputHash": "ddfa45dc7b6aff1328db9e1d7a1233b2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"}],\"name\":\"LiquidityProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEth\",\"type\":\"uint256\"}],\"name\":\"TokenToEthSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"xInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yReserves\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenInput\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/DEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract DEX {\\r\\n    uint256 public totalLiquidity;\\r\\n    mapping (address => uint256) public liquidity;\\r\\n\\r\\n    IERC20 token;\\r\\n\\r\\n    event EthToTokenSwap(address sender, string message, uint256 amountEth, uint256 amountToken);\\r\\n    event TokenToEthSwap(address sender, string message, uint256 amountToken, uint256 amountEth);\\r\\n    event LiquidityProvided(address sender, uint256 liquidityMinted, uint256 amountEth, uint256 tokenDeposit);\\r\\n    event LiquidityRemoved(address sender, uint256 liquidityAmount, uint256 ethAmount, uint256 tokenAmount);\\r\\n\\r\\n    constructor(address token_addr) {\\r\\n        token = IERC20(token_addr);\\r\\n    }\\r\\n\\r\\n    function init(uint256 tokens) public payable returns (uint256) {\\r\\n        require(totalLiquidity == 0, \\\"DEX: already initialized\\\");\\r\\n        totalLiquidity = address(this).balance;\\r\\n        liquidity[msg.sender] = totalLiquidity;\\r\\n        require(token.transferFrom(msg.sender, address(this), tokens), \\\"DEX: transfer failed\\\");\\r\\n\\r\\n        return totalLiquidity;\\r\\n    }\\r\\n\\r\\n    function price(\\r\\n        uint256 xInput,\\r\\n        uint256 xReserves,\\r\\n        uint256 yReserves\\r\\n    ) public pure returns (uint256 yOutput) {\\r\\n        uint256 xInputWithFee = 997 * xInput;\\r\\n        uint256 numerator = yReserves * xInputWithFee;\\r\\n        uint denominator = 1000*xReserves + xInputWithFee;\\r\\n        yOutput = numerator / denominator;\\r\\n\\r\\n        return yOutput;\\r\\n    }\\r\\n\\r\\n    function getLiquidity(address lp) public view returns (uint256) {\\r\\n        return liquidity[lp];\\r\\n    }\\r\\n\\r\\n    function ethToToken() public payable returns (uint256 tokenOutput) {\\r\\n        require(msg.value > 0, \\\"cannot swap 0 ETH\\\");\\r\\n\\r\\n        uint256 ethReserve = address(this).balance - msg.value;\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        \\r\\n        tokenOutput = price(msg.value, ethReserve, tokenReserve);\\r\\n        require(token.transfer(msg.sender, tokenOutput), \\\"DEX: ethToToken swap failed\\\");\\r\\n\\r\\n        emit EthToTokenSwap(msg.sender, \\\"Eth to Balloons\\\", msg.value, tokenOutput);\\r\\n\\r\\n        return tokenOutput;\\r\\n    }\\r\\n\\r\\n    function tokenToEth(uint256 tokenInput) public returns (uint256 ethOutput) {\\r\\n        require(tokenInput > 0, \\\"cannot swap 0 tokens\\\");\\r\\n\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        uint256 ethReserve = address(this).balance;\\r\\n\\r\\n        ethOutput = price(tokenInput, tokenReserve, ethReserve);\\r\\n        require(token.transferFrom(msg.sender, address(this), tokenInput), \\\"DEX: tokenToEth swap failed to send tokens\\\");\\r\\n\\r\\n        (bool sentEth, ) = msg.sender.call{value: ethOutput}(\\\"\\\");\\r\\n        require(sentEth, \\\"DEX: tokenToEth swap failed to send ETH\\\");\\r\\n        \\r\\n        emit TokenToEthSwap(msg.sender, \\\"Balloons to ETH\\\", tokenInput, ethOutput);\\r\\n\\r\\n        return ethOutput;\\r\\n    }\\r\\n\\r\\n    function deposit() public payable returns (uint256 tokenDeposit) {\\r\\n        require(msg.value > 0, \\\"DEX: deposit failed, no ETH sent\\\");\\r\\n\\r\\n        uint256 ethReserve = address(this).balance - msg.value;\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n\\r\\n        tokenDeposit = (msg.value * tokenReserve / ethReserve) + 1;\\r\\n\\r\\n        require(token.transferFrom(msg.sender, address(this), tokenDeposit));\\r\\n\\r\\n        uint256 liquidityMinted = msg.value * totalLiquidity / ethReserve;\\r\\n        liquidity[msg.sender] += liquidityMinted;\\r\\n        totalLiquidity += liquidityMinted;\\r\\n\\r\\n        emit LiquidityProvided(msg.sender, liquidityMinted, msg.value, tokenDeposit);\\r\\n\\r\\n        return tokenDeposit;\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 liquidityAmount) public returns (uint256 ethAmount, uint256 tokenAmount) {\\r\\n        require(liquidity[msg.sender] >= liquidityAmount, \\\"DEX: withdraw failed, sender does not have enough liquidity\\\");\\r\\n\\r\\n        uint256 ethReserve = address(this).balance;\\r\\n        uint256 tokenReserve = token.balanceOf(address(this));\\r\\n        ethAmount = liquidityAmount * ethReserve / totalLiquidity;\\r\\n        tokenAmount = liquidityAmount * tokenReserve / totalLiquidity;\\r\\n\\r\\n        liquidity[msg.sender] -= liquidityAmount;\\r\\n        totalLiquidity -= liquidityAmount;\\r\\n\\r\\n        (bool sent, ) = payable(msg.sender).call{ value: ethAmount }(\\\"\\\");\\r\\n        require(sent, \\\"withdraw(): revert in transferring eth to you!\\\");\\r\\n        require(token.transfer(msg.sender, tokenAmount));\\r\\n\\r\\n        emit LiquidityRemoved(msg.sender, liquidityAmount, ethAmount, tokenAmount);\\r\\n        \\r\\n        return (ethAmount, tokenAmount);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x244e7b99f38358a32cf5bddb366407e743609b217327863890cecfe8d782868f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ee1380380610ee183398101604081905261002f91610054565b600280546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610e4e806100936000396000f3fe6080604052600436106100865760003560e01c8063789770f411610059578063789770f414610129578063a747b93b14610131578063b7b0422d14610167578063b8c876b11461017a578063d0e30db0146101a757600080fd5b806315770f921461008b5780632071a9f4146100b45780632e1a7d4d146100d457806370b2a30f14610109575b600080fd5b34801561009757600080fd5b506100a160005481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100a16100cf366004610ced565b6101af565b3480156100e057600080fd5b506100f46100ef366004610d19565b6101fe565b604080519283526020830191909152016100ab565b34801561011557600080fd5b506100a1610124366004610d19565b6104ed565b6100a16107a3565b34801561013d57600080fd5b506100a161014c366004610d32565b6001600160a01b031660009081526001602052604090205490565b6100a1610175366004610d19565b6109a0565b34801561018657600080fd5b506100a1610195366004610d32565b60016020526000908152604090205481565b6100a1610acf565b6000806101be856103e5610d78565b905060006101cc8285610d78565b90506000826101dd876103e8610d78565b6101e79190610d95565b90506101f38183610da8565b979650505050505050565b33600090815260016020526040812054819083111561028a5760405162461bcd60e51b815260206004820152603b60248201527f4445583a207769746864726177206661696c65642c2073656e64657220646f6560448201527f73206e6f74206861766520656e6f756768206c6971756964697479000000000060648201526084015b60405180910390fd5b6002546040516370a0823160e01b815230600482015247916000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610dca565b60005490915061030b8387610d78565b6103159190610da8565b6000549094506103258287610d78565b61032f9190610da8565b33600090815260016020526040812080549295508792909190610353908490610de3565b925050819055508460008082825461036b9190610de3565b9091555050604051600090339086908381818185875af1925050503d80600081146103b2576040519150601f19603f3d011682016040523d82523d6000602084013e6103b7565b606091505b505090508061041f5760405162461bcd60e51b815260206004820152602e60248201527f776974686472617728293a2072657665727420696e207472616e73666572726960448201526d6e672065746820746f20796f752160901b6064820152608401610281565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610df6565b61049d57600080fd5b6040805133815260208101889052908101869052606081018590527f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060800160405180910390a1505050915091565b60008082116105355760405162461bcd60e51b815260206004820152601460248201527363616e6e6f742073776170203020746f6b656e7360601b6044820152606401610281565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190610dca565b9050476105b08483836101af565b6002546040516323b872dd60e01b8152336004820152306024820152604481018790529194506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610df6565b61068b5760405162461bcd60e51b815260206004820152602a60248201527f4445583a20746f6b656e546f4574682073776170206661696c656420746f2073604482015269656e6420746f6b656e7360b01b6064820152608401610281565b604051600090339085908381818185875af1925050503d80600081146106cd576040519150601f19603f3d011682016040523d82523d6000602084013e6106d2565b606091505b50509050806107335760405162461bcd60e51b815260206004820152602760248201527f4445583a20746f6b656e546f4574682073776170206661696c656420746f20736044820152660cadcc8408aa8960cb1b6064820152608401610281565b60408051338152608060208201819052600f908201526e084c2d8d8dededce640e8de408aa89608b1b60a0820152908101869052606081018590527f7536309ea3be068750ddab69b17222930264bf16637e5ccb83316b4b3d9267459060c00160405180910390a1505050919050565b60008034116107e85760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840e6eec2e04060408aa89607b1b6044820152606401610281565b60006107f43447610de3565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610dca565b90506108733483836101af565b60025460405163a9059cbb60e01b8152336004820152602481018390529194506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190610df6565b6109355760405162461bcd60e51b815260206004820152601b60248201527f4445583a20657468546f546f6b656e2073776170206661696c656400000000006044820152606401610281565b60408051338152608060208201819052600f908201526e45746820746f2042616c6c6f6f6e7360881b60a082015234818301526060810185905290517f3358768c94c6d0c84dbfcedabf8e58d32d4c475f61b1b2600828bbc30dbf01629181900360c00190a1505090565b60008054156109f15760405162461bcd60e51b815260206004820152601860248201527f4445583a20616c726561647920696e697469616c697a656400000000000000006044820152606401610281565b4760008181553380825260016020526040918290209290925560025490516323b872dd60e01b81526004810192909252306024830152604482018490526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190610df6565b610ac75760405162461bcd60e51b81526020600482015260146024820152731111560e881d1c985b9cd9995c8819985a5b195960621b6044820152606401610281565b505060005490565b6000803411610b205760405162461bcd60e51b815260206004820181905260248201527f4445583a206465706f736974206661696c65642c206e6f204554482073656e746044820152606401610281565b6000610b2c3447610de3565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190610dca565b905081610bab8234610d78565b610bb59190610da8565b610bc0906001610d95565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390529194506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190610df6565b610c4557600080fd5b60008260005434610c569190610d78565b610c609190610da8565b33600090815260016020526040812080549293508392909190610c84908490610d95565b9250508190555080600080828254610c9c9190610d95565b9091555050604080513381526020810183905234818301526060810186905290517f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009181900360800190a150505090565b600080600060608486031215610d0257600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d2b57600080fd5b5035919050565b600060208284031215610d4457600080fd5b81356001600160a01b0381168114610d5b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d8f57610d8f610d62565b92915050565b80820180821115610d8f57610d8f610d62565b600082610dc557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ddc57600080fd5b5051919050565b81810381811115610d8f57610d8f610d62565b600060208284031215610e0857600080fd5b81518015158114610d5b57600080fdfea2646970667358221220f01e7393c6498e4ef990c6095c2459ccb95ba6f2a35785a97d3a67a977326ab964736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063789770f411610059578063789770f414610129578063a747b93b14610131578063b7b0422d14610167578063b8c876b11461017a578063d0e30db0146101a757600080fd5b806315770f921461008b5780632071a9f4146100b45780632e1a7d4d146100d457806370b2a30f14610109575b600080fd5b34801561009757600080fd5b506100a160005481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100a16100cf366004610ced565b6101af565b3480156100e057600080fd5b506100f46100ef366004610d19565b6101fe565b604080519283526020830191909152016100ab565b34801561011557600080fd5b506100a1610124366004610d19565b6104ed565b6100a16107a3565b34801561013d57600080fd5b506100a161014c366004610d32565b6001600160a01b031660009081526001602052604090205490565b6100a1610175366004610d19565b6109a0565b34801561018657600080fd5b506100a1610195366004610d32565b60016020526000908152604090205481565b6100a1610acf565b6000806101be856103e5610d78565b905060006101cc8285610d78565b90506000826101dd876103e8610d78565b6101e79190610d95565b90506101f38183610da8565b979650505050505050565b33600090815260016020526040812054819083111561028a5760405162461bcd60e51b815260206004820152603b60248201527f4445583a207769746864726177206661696c65642c2073656e64657220646f6560448201527f73206e6f74206861766520656e6f756768206c6971756964697479000000000060648201526084015b60405180910390fd5b6002546040516370a0823160e01b815230600482015247916000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610dca565b60005490915061030b8387610d78565b6103159190610da8565b6000549094506103258287610d78565b61032f9190610da8565b33600090815260016020526040812080549295508792909190610353908490610de3565b925050819055508460008082825461036b9190610de3565b9091555050604051600090339086908381818185875af1925050503d80600081146103b2576040519150601f19603f3d011682016040523d82523d6000602084013e6103b7565b606091505b505090508061041f5760405162461bcd60e51b815260206004820152602e60248201527f776974686472617728293a2072657665727420696e207472616e73666572726960448201526d6e672065746820746f20796f752160901b6064820152608401610281565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610df6565b61049d57600080fd5b6040805133815260208101889052908101869052606081018590527f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d9060800160405180910390a1505050915091565b60008082116105355760405162461bcd60e51b815260206004820152601460248201527363616e6e6f742073776170203020746f6b656e7360601b6044820152606401610281565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190610dca565b9050476105b08483836101af565b6002546040516323b872dd60e01b8152336004820152306024820152604481018790529194506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610df6565b61068b5760405162461bcd60e51b815260206004820152602a60248201527f4445583a20746f6b656e546f4574682073776170206661696c656420746f2073604482015269656e6420746f6b656e7360b01b6064820152608401610281565b604051600090339085908381818185875af1925050503d80600081146106cd576040519150601f19603f3d011682016040523d82523d6000602084013e6106d2565b606091505b50509050806107335760405162461bcd60e51b815260206004820152602760248201527f4445583a20746f6b656e546f4574682073776170206661696c656420746f20736044820152660cadcc8408aa8960cb1b6064820152608401610281565b60408051338152608060208201819052600f908201526e084c2d8d8dededce640e8de408aa89608b1b60a0820152908101869052606081018590527f7536309ea3be068750ddab69b17222930264bf16637e5ccb83316b4b3d9267459060c00160405180910390a1505050919050565b60008034116107e85760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840e6eec2e04060408aa89607b1b6044820152606401610281565b60006107f43447610de3565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610dca565b90506108733483836101af565b60025460405163a9059cbb60e01b8152336004820152602481018390529194506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190610df6565b6109355760405162461bcd60e51b815260206004820152601b60248201527f4445583a20657468546f546f6b656e2073776170206661696c656400000000006044820152606401610281565b60408051338152608060208201819052600f908201526e45746820746f2042616c6c6f6f6e7360881b60a082015234818301526060810185905290517f3358768c94c6d0c84dbfcedabf8e58d32d4c475f61b1b2600828bbc30dbf01629181900360c00190a1505090565b60008054156109f15760405162461bcd60e51b815260206004820152601860248201527f4445583a20616c726561647920696e697469616c697a656400000000000000006044820152606401610281565b4760008181553380825260016020526040918290209290925560025490516323b872dd60e01b81526004810192909252306024830152604482018490526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190610df6565b610ac75760405162461bcd60e51b81526020600482015260146024820152731111560e881d1c985b9cd9995c8819985a5b195960621b6044820152606401610281565b505060005490565b6000803411610b205760405162461bcd60e51b815260206004820181905260248201527f4445583a206465706f736974206661696c65642c206e6f204554482073656e746044820152606401610281565b6000610b2c3447610de3565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e9190610dca565b905081610bab8234610d78565b610bb59190610da8565b610bc0906001610d95565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390529194506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190610df6565b610c4557600080fd5b60008260005434610c569190610d78565b610c609190610da8565b33600090815260016020526040812080549293508392909190610c84908490610d95565b9250508190555080600080828254610c9c9190610d95565b9091555050604080513381526020810183905234818301526060810186905290517f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f5009181900360800190a150505090565b600080600060608486031215610d0257600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d2b57600080fd5b5035919050565b600060208284031215610d4457600080fd5b81356001600160a01b0381168114610d5b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d8f57610d8f610d62565b92915050565b80820180821115610d8f57610d8f610d62565b600082610dc557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ddc57600080fd5b5051919050565b81810381811115610d8f57610d8f610d62565b600060208284031215610e0857600080fd5b81518015158114610d5b57600080fdfea2646970667358221220f01e7393c6498e4ef990c6095c2459ccb95ba6f2a35785a97d3a67a977326ab964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/DEX.sol:DEX",
        "label": "totalLiquidity",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 86,
        "contract": "contracts/DEX.sol:DEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 89,
        "contract": "contracts/DEX.sol:DEX",
        "label": "token",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)77"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}